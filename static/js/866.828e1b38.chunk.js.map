{"version":3,"file":"static/js/866.828e1b38.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/pages/Reviews/Reviews.module.css?9a3e","pages/Reviews/Reviews.jsx","services/movieService.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"reviewsContainer\":\"Reviews_reviewsContainer__S2d5o\",\"reviewItem\":\"Reviews_reviewItem__beLBz\",\"error\":\"Reviews_error__VdPe2\"};","import React, { useEffect, useState } from 'react';\nimport { getMovieReviews } from 'services/movieService';\nimport Loader from 'components/Loader/Loader';\nimport styles from './Reviews.module.css';\n\nconst Reviews = ({ movieId }) => {\n  const [reviews, setReviews] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        const data = await getMovieReviews(movieId);\n        setReviews(data.results);\n      } catch (err) {\n        setError('Failed to fetch reviews. Please try again later.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    if (movieId) {\n      fetchReviews();\n    }\n  }, [movieId]);\n\n  return (\n    <div className={styles.reviewsContainer}>\n      {loading && <Loader />}\n      {error && <p className={styles.error}>{error}</p>}\n      <h2>Reviews</h2>\n      {reviews.length > 0 ? (\n        reviews.map(review => (\n          <div key={review.id} className={styles.reviewItem}>\n            <h3>{review.author}</h3>\n            <p>{review.content}</p>\n          </div>\n        ))\n      ) : (\n        <p>No reviews available for this movie.</p>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\nimport { Notify } from 'notiflix';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '62fd1f6f75634c3e4cf1834399c4aa19';\n\nconst parameters = {\n  position: 'center-center',\n  timeout: 4000,\n  width: '750px',\n  fontSize: '30px',\n};\n\nexport async function getPopularFilms(page = 1) {\n  try {\n    const response = await axios.get(`${BASE_URL}/trending/movie/day`, {\n      params: { api_key: API_KEY, page: page || 1 },\n    });\n    return response.data;\n  } catch (error) {\n    onError(error);\n  }\n}\n\nexport async function getMovieInfo(id) {\n  const response = await axios.get(`${BASE_URL}/movie/${id}`, {\n    params: { api_key: API_KEY },\n  });\n  return response.data;\n}\n\nexport async function getMovieCast(id) {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${id}/credits?`, {\n      params: { api_key: API_KEY },\n    });\n    return response.data;\n  } catch (error) {\n    onError(error);\n  }\n}\n\nexport async function getMovieReviews(id) {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${id}/reviews?`, {\n      params: { api_key: API_KEY },\n    });\n    return response.data;\n  } catch (error) {\n    onError(error);\n  }\n}\n\n// export async function getMovieByKeyword(keyword, page = 1) {\n//   const response = await axios.get(\n//     `${BASE_URL}/search/movie?include_adult=false?language=en-US&page=1`,\n//     {\n//       params: { api_key: API_KEY, query: keyword, page: page },\n//     }\n//   );\n//   return response.data;\n// }\n\nexport async function getMovieByKeyword(keyword, page = 1) {\n  const response = await axios.get(`${BASE_URL}/search/movie`, {\n    params: {\n      api_key: API_KEY,\n      query: keyword,\n      page: page,\n      language: 'en-US',\n      include_adult: false,\n    },\n  });\n  return response.data;\n}\n\nexport async function getMoviesByGenres() {\n  try {\n    const response = await axios.get(`${BASE_URL}/genre/movie/list`, {\n      params: { api_key: API_KEY, language: 'en' },\n    });\n    return response.data;\n  } catch (error) {\n    onError(error.message);\n  }\n}\n\nexport async function getMovieTrailer(id) {\n  const response = await axios.get(`${BASE_URL}/movie/${id}/videos`, {\n    params: { api_key: API_KEY },\n  });\n  return response.data;\n}\n\nexport function onError(error) {\n  console.error('An error occurred:', error);\n  Notify.failure(\n    'Oops! Something went wrong! Try reloading the page or make another choice!',\n    parameters\n  );\n}\n"],"names":["_ref","movieId","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","useEffect","fetchReviews","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","getMovieReviews","sent","results","t0","finish","stop","apply","arguments","_jsxs","className","styles","children","_jsx","Loader","length","map","review","author","content","id","BASE_URL","API_KEY","parameters","position","timeout","width","fontSize","getPopularFilms","_getPopularFilms","page","response","_args","undefined","axios","concat","params","api_key","abrupt","onError","getMovieInfo","_x","_getMovieInfo","_callee2","_context2","getMovieCast","_x2","_getMovieCast","_callee3","_context3","_x3","_getMovieReviews","_callee4","_context4","getMovieByKeyword","_x4","_getMovieByKeyword","_callee5","keyword","_args5","_context5","query","language","include_adult","console","Notify"],"sourceRoot":""}