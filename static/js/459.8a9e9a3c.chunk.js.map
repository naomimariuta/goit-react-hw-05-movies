{"version":3,"file":"static/js/459.8a9e9a3c.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/pages/Cast/Cast.module.css?cfbb","pages/Cast/Cast.jsx","services/movieService.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castContainer\":\"Cast_castContainer__a1D7R\",\"actorImage\":\"Cast_actorImage__H8v8s\",\"castList\":\"Cast_castList__hbalY\",\"error\":\"Cast_error__qFoZ6\"};","import React, { useEffect, useState } from 'react';\nimport Loader from 'components/Loader/Loader';\nimport styles from './Cast.module.css';\nimport { getMovieCast } from 'services/movieService';\n\nconst Cast = ({ movieId }) => {\n  const [cast, setCast] = useState([]); // Default to an empty array\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        const data = await getMovieCast(movieId);\n\n        // Check if data and data.cast are defined and is an array\n        if (data && Array.isArray(data.cast)) {\n          setCast(data.cast);\n        } else {\n          throw new Error('Invalid cast data received from API');\n        }\n      } catch (err) {\n        setError('Failed to fetch cast information. Please try again later.');\n        console.error(err); // Log the error for debugging\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    if (movieId) {\n      fetchCast();\n    }\n  }, [movieId]);\n\n  return (\n    <div className={styles.castContainer}>\n      {loading && <Loader />}\n      {error && <p className={styles.error}>{error}</p>}\n      <h2>Cast</h2>\n      <ul className={styles.castList}>\n        {cast.length > 0 ? (\n          cast.map(actor => (\n            <li key={actor.cast_id}>\n              <img\n                src={`https://image.tmdb.org/t/p/w200${actor.profile_path}`}\n                alt={actor.name}\n                className={styles.actorImage}\n              />\n              <p>\n                {actor.name} as {actor.character}\n              </p>\n            </li>\n          ))\n        ) : (\n          <p>No cast information available.</p>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\nimport { Notify } from 'notiflix';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '62fd1f6f75634c3e4cf1834399c4aa19';\n\nconst parameters = {\n  position: 'center-center',\n  timeout: 4000,\n  width: '750px',\n  fontSize: '30px',\n};\n\nexport async function getPopularFilms(page = 1) {\n  try {\n    const response = await axios.get(`${BASE_URL}/trending/movie/day`, {\n      params: { api_key: API_KEY, page: page || 1 },\n    });\n    return response.data;\n  } catch (error) {\n    onError(error);\n  }\n}\n\nexport async function getMovieInfo(id) {\n  const response = await axios.get(`${BASE_URL}/movie/${id}`, {\n    params: { api_key: API_KEY },\n  });\n  return response.data;\n}\n\nexport async function getMovieCast(id) {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${id}/credits?`, {\n      params: { api_key: API_KEY },\n    });\n    return response.data;\n  } catch (error) {\n    onError(error);\n  }\n}\n\nexport async function getMovieReviews(id) {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${id}/reviews?`, {\n      params: { api_key: API_KEY },\n    });\n    return response.data;\n  } catch (error) {\n    onError(error);\n  }\n}\n\n// export async function getMovieByKeyword(keyword, page = 1) {\n//   const response = await axios.get(\n//     `${BASE_URL}/search/movie?include_adult=false?language=en-US&page=1`,\n//     {\n//       params: { api_key: API_KEY, query: keyword, page: page },\n//     }\n//   );\n//   return response.data;\n// }\n\nexport async function getMovieByKeyword(keyword, page = 1) {\n  const response = await axios.get(`${BASE_URL}/search/movie`, {\n    params: {\n      api_key: API_KEY,\n      query: keyword,\n      page: page,\n      language: 'en-US',\n      include_adult: false,\n    },\n  });\n  return response.data;\n}\n\nexport async function getMoviesByGenres() {\n  try {\n    const response = await axios.get(`${BASE_URL}/genre/movie/list`, {\n      params: { api_key: API_KEY, language: 'en' },\n    });\n    return response.data;\n  } catch (error) {\n    onError(error.message);\n  }\n}\n\nexport async function getMovieTrailer(id) {\n  const response = await axios.get(`${BASE_URL}/movie/${id}/videos`, {\n    params: { api_key: API_KEY },\n  });\n  return response.data;\n}\n\nexport function onError(error) {\n  console.error('An error occurred:', error);\n  Notify.failure(\n    'Oops! Something went wrong! Try reloading the page or make another choice!',\n    parameters\n  );\n}\n"],"names":["_ref","movieId","_useState","useState","_useState2","_slicedToArray","cast","setCast","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","useEffect","fetchCast","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","getMovieCast","sent","Array","isArray","Error","t0","console","finish","stop","apply","arguments","_jsxs","className","styles","children","_jsx","Loader","length","map","actor","src","concat","profile_path","alt","name","character","cast_id","BASE_URL","API_KEY","parameters","position","timeout","width","fontSize","getPopularFilms","_getPopularFilms","page","response","_args","undefined","axios","params","api_key","abrupt","onError","getMovieInfo","_x","_getMovieInfo","_callee2","id","_context2","_x2","_getMovieCast","_callee3","_context3","getMovieReviews","_x3","_getMovieReviews","_callee4","_context4","getMovieByKeyword","_x4","_getMovieByKeyword","_callee5","keyword","_args5","_context5","query","language","include_adult","Notify"],"sourceRoot":""}