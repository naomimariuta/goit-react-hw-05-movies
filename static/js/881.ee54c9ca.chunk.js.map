{"version":3,"file":"static/js/881.ee54c9ca.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx","services/movieService.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"moviesContainer\":\"Movies_moviesContainer__RXtJy\",\"searchForm\":\"Movies_searchForm__J4-xw\",\"searchInput\":\"Movies_searchInput__8fq2n\",\"searchButton\":\"Movies_searchButton__ieSHM\",\"error\":\"Movies_error__K1Syp\",\"movieList\":\"Movies_movieList__FD6N4\",\"movieCard\":\"Movies_movieCard__jhhqX\",\"moviePoster\":\"Movies_moviePoster__1Y8Zf\"};","import React, { useState } from 'react';\nimport { getMovieByKeyword } from 'services/movieService';\nimport Loader from 'components/Loader/Loader';\nimport styles from './Movies.module.css';\n\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const handleInputChange = event => {\n    setQuery(event.target.value);\n  };\n\n  const handleSearchSubmit = async event => {\n    event.preventDefault();\n    if (query.trim() === '') {\n      setError('Please enter a movie name to search.');\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    try {\n      const data = await getMovieByKeyword(query);\n      setMovies(data.results); // Assuming 'results' contains the movie array\n    } catch (err) {\n      setError('Failed to fetch movies. Please try again later.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className={styles.moviesContainer}>\n      <h1>Search for Movies</h1>\n      <form onSubmit={handleSearchSubmit} className={styles.searchForm}>\n        <input\n          type=\"text\"\n          placeholder=\"Search movies by name\"\n          value={query}\n          onChange={handleInputChange}\n          className={styles.searchInput}\n        />\n        <button type=\"submit\" className={styles.searchButton}>\n          Search\n        </button>\n      </form>\n\n      {loading && <Loader />}\n      {error && <p className={styles.error}>{error}</p>}\n\n      <div className={styles.movieList}>\n        {movies.map(movie => (\n          <div key={movie.id} className={styles.movieCard}>\n            <a href={`/movies/${movie.id}`}>\n              <img\n                src={`https://image.tmdb.org/t/p/w200${movie.poster_path}`}\n                alt={movie.title}\n                className={styles.moviePoster}\n              />\n            </a>\n            <h3>{movie.title}</h3>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\nimport { Notify } from 'notiflix';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'b4a37daab61b0e2cbc84b0608fc0fe04';\n\nconst parameters = {\n  position: 'center-center',\n  timeout: 4000,\n  width: '750px',\n  fontSize: '30px',\n};\n\nexport async function getPopularFilms(page = 1) {\n  try {\n    const response = await axios.get(`${BASE_URL}/trending/movie/day`, {\n      params: { api_key: API_KEY, page: page || 1 },\n    });\n    return response.data;\n  } catch (error) {\n    onError(error);\n  }\n}\n\nexport async function getMovieInfo(id) {\n  const response = await axios.get(`${BASE_URL}/movie/${id}`, {\n    params: { api_key: API_KEY },\n  });\n  return response.data;\n}\n\nexport async function getMovieCast(id) {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${id}/credits?`, {\n      params: { api_key: API_KEY },\n    });\n    return response.data;\n  } catch (error) {\n    onError(error);\n  }\n}\n\nexport async function getMovieReviews(id) {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${id}/reviews?`, {\n      params: { api_key: API_KEY },\n    });\n    return response.data;\n  } catch (error) {\n    onError(error);\n  }\n}\n\n// export async function getMovieByKeyword(keyword, page = 1) {\n//   const response = await axios.get(\n//     `${BASE_URL}/search/movie?include_adult=false?language=en-US&page=1`,\n//     {\n//       params: { api_key: API_KEY, query: keyword, page: page },\n//     }\n//   );\n//   return response.data;\n// }\n\nexport async function getMovieByKeyword(keyword, page = 1) {\n  const response = await axios.get(`${BASE_URL}/search/movie`, {\n    params: {\n      api_key: API_KEY,\n      query: keyword,\n      page: page,\n      language: 'en-US',\n      include_adult: false,\n    },\n  });\n  return response.data;\n}\n\nexport async function getMoviesByGenres() {\n  try {\n    const response = await axios.get(`${BASE_URL}/genre/movie/list`, {\n      params: { api_key: API_KEY, language: 'en' },\n    });\n    return response.data;\n  } catch (error) {\n    onError(error.message);\n  }\n}\n\nexport async function getMovieTrailer(id) {\n  const response = await axios.get(`${BASE_URL}/movie/${id}/videos`, {\n    params: { api_key: API_KEY },\n  });\n  return response.data;\n}\n\nexport function onError(error) {\n  console.error('An error occurred:', error);\n  Notify.failure(\n    'Oops! Something went wrong! Try reloading the page or make another choice!',\n    parameters\n  );\n}\n"],"names":["_useState","useState","_useState2","_slicedToArray","query","setQuery","_useState3","_useState4","movies","setMovies","_useState5","_useState6","loading","setLoading","_useState7","_useState8","error","setError","handleSearchSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","event","data","_context","prev","next","preventDefault","trim","abrupt","getMovieByKeyword","sent","results","t0","finish","stop","_x","apply","arguments","_jsxs","className","styles","children","_jsx","onSubmit","type","placeholder","value","onChange","target","Loader","map","movie","href","concat","id","src","poster_path","alt","title","BASE_URL","API_KEY","parameters","position","timeout","width","fontSize","getPopularFilms","_getPopularFilms","page","response","_args","length","undefined","axios","params","api_key","onError","getMovieInfo","_getMovieInfo","_callee2","_context2","getMovieCast","_x2","_getMovieCast","_callee3","_context3","getMovieReviews","_x3","_getMovieReviews","_callee4","_context4","_x4","_getMovieByKeyword","_callee5","keyword","_args5","_context5","language","include_adult","console","Notify"],"sourceRoot":""}