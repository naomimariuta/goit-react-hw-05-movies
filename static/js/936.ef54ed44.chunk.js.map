{"version":3,"file":"static/js/936.ef54ed44.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/pages/Home/Home.module.css?1370","pages/Home/Home.jsx","services/movieService.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"homeContainer\":\"Home_homeContainer__GxC9g\",\"movieCard\":\"Home_movieCard__-NT8X\",\"moviePoster\":\"Home_moviePoster__xLFkY\",\"gallery\":\"Home_gallery__RIzdF\"};","import React, { useEffect, useState } from 'react';\nimport { getPopularFilms } from 'services/movieService';\nimport Loader from 'components/Loader/Loader';\nimport styles from './Home.module.css';\nimport { NavLink } from 'react-router-dom';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchTrendingMovies = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        const data = await getPopularFilms();\n        setMovies(data.results); // Assuming 'results' contains the movie array\n      } catch (err) {\n        setError('Failed to fetch trending movies. Please try again later.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchTrendingMovies();\n  }, []);\n\n  return (\n    <div className={styles.homeContainer}>\n      <h1>Trending Movies</h1>\n      {loading && <Loader />}\n      {error && <p className={styles.error}>{error}</p>}\n      <div className={styles.movieList}>\n        {movies.map(movie => (\n          <div key={movie.id} className={styles.movieCard}>\n            <NavLink to={`/movies/${movie.id}`}>\n              <img\n                src={`https://image.tmdb.org/t/p/w200${movie.poster_path}`}\n                alt={movie.title}\n                className={styles.moviePoster}\n              />\n            </NavLink>\n            <h3>{movie.title}</h3>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\nimport { Notify } from 'notiflix';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '62fd1f6f75634c3e4cf1834399c4aa19';\n\nconst parameters = {\n  position: 'center-center',\n  timeout: 4000,\n  width: '750px',\n  fontSize: '30px',\n};\n\nexport async function getPopularFilms(page = 1) {\n  try {\n    const response = await axios.get(`${BASE_URL}/trending/movie/day`, {\n      params: { api_key: API_KEY, page: page || 1 },\n    });\n    return response.data;\n  } catch (error) {\n    onError(error);\n  }\n}\n\nexport async function getMovieInfo(id) {\n  const response = await axios.get(`${BASE_URL}/movie/${id}`, {\n    params: { api_key: API_KEY },\n  });\n  return response.data;\n}\n\nexport async function getMovieCast(id) {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${id}/credits?`, {\n      params: { api_key: API_KEY },\n    });\n    return response.data;\n  } catch (error) {\n    onError(error);\n  }\n}\n\nexport async function getMovieReviews(id) {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${id}/reviews?`, {\n      params: { api_key: API_KEY },\n    });\n    return response.data;\n  } catch (error) {\n    onError(error);\n  }\n}\n\n// export async function getMovieByKeyword(keyword, page = 1) {\n//   const response = await axios.get(\n//     `${BASE_URL}/search/movie?include_adult=false?language=en-US&page=1`,\n//     {\n//       params: { api_key: API_KEY, query: keyword, page: page },\n//     }\n//   );\n//   return response.data;\n// }\n\nexport async function getMovieByKeyword(keyword, page = 1) {\n  const response = await axios.get(`${BASE_URL}/search/movie`, {\n    params: {\n      api_key: API_KEY,\n      query: keyword,\n      page: page,\n      language: 'en-US',\n      include_adult: false,\n    },\n  });\n  return response.data;\n}\n\nexport async function getMoviesByGenres() {\n  try {\n    const response = await axios.get(`${BASE_URL}/genre/movie/list`, {\n      params: { api_key: API_KEY, language: 'en' },\n    });\n    return response.data;\n  } catch (error) {\n    onError(error.message);\n  }\n}\n\nexport async function getMovieTrailer(id) {\n  const response = await axios.get(`${BASE_URL}/movie/${id}/videos`, {\n    params: { api_key: API_KEY },\n  });\n  return response.data;\n}\n\nexport function onError(error) {\n  console.error('An error occurred:', error);\n  Notify.failure(\n    'Oops! Something went wrong! Try reloading the page or make another choice!',\n    parameters\n  );\n}\n"],"names":["_useState","useState","_useState2","_slicedToArray","movies","setMovies","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","useEffect","fetchTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","getPopularFilms","sent","results","t0","finish","stop","apply","arguments","_jsxs","className","styles","children","_jsx","Loader","map","movie","NavLink","to","concat","id","src","poster_path","alt","title","BASE_URL","API_KEY","parameters","position","timeout","width","fontSize","_getPopularFilms","page","response","_args","length","undefined","axios","params","api_key","abrupt","onError","getMovieInfo","_x","_getMovieInfo","_callee2","_context2","getMovieCast","_x2","_getMovieCast","_callee3","_context3","getMovieReviews","_x3","_getMovieReviews","_callee4","_context4","getMovieByKeyword","_x4","_getMovieByKeyword","_callee5","keyword","_args5","_context5","query","language","include_adult","console","Notify"],"sourceRoot":""}