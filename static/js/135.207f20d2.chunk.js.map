{"version":3,"file":"static/js/135.207f20d2.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/pages/Cast/Cast.module.css?cfbb","pages/Cast/Cast.jsx","webpack://goit-react-hw-05-movies/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx","webpack://goit-react-hw-05-movies/./src/pages/Reviews/Reviews.module.css?9a3e","pages/Reviews/Reviews.jsx","services/movieService.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castContainer\":\"Cast_castContainer__a1D7R\",\"actorImage\":\"Cast_actorImage__H8v8s\",\"castList\":\"Cast_castList__hbalY\",\"error\":\"Cast_error__qFoZ6\"};","import React, { useEffect, useState } from 'react';\nimport Loader from 'components/Loader/Loader';\nimport styles from './Cast.module.css';\nimport { getMovieCast } from 'services/movieService';\n\nconst Cast = ({ movieId }) => {\n  const [cast, setCast] = useState([]); // Default to an empty array\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        const data = await getMovieCast(movieId);\n\n        // Check if data and data.cast are defined and is an array\n        if (data && Array.isArray(data.cast)) {\n          setCast(data.cast);\n        } else {\n          throw new Error('Invalid cast data received from API');\n        }\n      } catch (err) {\n        setError('Failed to fetch cast information. Please try again later.');\n        console.error(err); // Log the error for debugging\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    if (movieId) {\n      fetchCast();\n    }\n  }, [movieId]);\n\n  return (\n    <div className={styles.castContainer}>\n      {loading && <Loader />}\n      {error && <p className={styles.error}>{error}</p>}\n      <h2>Cast</h2>\n      <ul className={styles.castList}>\n        {cast.length > 0 ? (\n          cast.map(actor => (\n            <li key={actor.cast_id}>\n              <img\n                src={`https://image.tmdb.org/t/p/w200${actor.profile_path}`}\n                alt={actor.name}\n                className={styles.actorImage}\n              />\n              <p>\n                {actor.name} as {actor.character}\n              </p>\n            </li>\n          ))\n        ) : (\n          <p>No cast information available.</p>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n","// extracted by mini-css-extract-plugin\nexport default {\"movieDetailsContainer\":\"MovieDetails_movieDetailsContainer__hxmcN\",\"detailsContainer\":\"MovieDetails_detailsContainer__Y0Fjr\",\"link\":\"MovieDetails_link__U+v+7\",\"error\":\"MovieDetails_error__uOHXe\"};","import React, { useEffect, useState, useRef } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport Loader from 'components/Loader/Loader';\nimport { getMovieInfo } from 'services/movieService';\nimport Cast from 'pages/Cast/Cast';\nimport Reviews from 'pages/Reviews/Reviews';\nimport styles from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  const [movie, setMovie] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [activeSection, setActiveSection] = useState(''); // To track active section\n\n  const castRef = useRef(null);\n  const reviewsRef = useRef(null);\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        const data = await getMovieInfo(movieId);\n        setMovie(data);\n      } catch (err) {\n        setError('Failed to fetch movie details. Please try again later.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchMovieDetails();\n  }, [movieId]);\n\n  useEffect(() => {\n    const path = location.pathname.split('/');\n    if (path.includes('cast')) {\n      setActiveSection('cast');\n    } else if (path.includes('reviews')) {\n      setActiveSection('reviews');\n    } else {\n      setActiveSection('');\n    }\n  }, [location]);\n\n  const scrollToSection = section => {\n    if (section === 'cast' && castRef.current) {\n      castRef.current.scrollIntoView({ behavior: 'smooth' });\n    } else if (section === 'reviews' && reviewsRef.current) {\n      reviewsRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  };\n\n  if (loading) {\n    return <Loader />;\n  }\n\n  if (error) {\n    return <p className={styles.error}>{error}</p>;\n  }\n\n  if (!movie) {\n    return null && <Loader />;\n  }\n\n  return (\n    <div className={styles.movieDetailsContainer}>\n      <h1>{movie.title}</h1>\n      <img\n        src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n        alt={movie.title}\n      />\n      <p>{movie.overview}</p>\n\n      <div className={styles.detailsContainer}>\n        <button\n          className={styles.link}\n          onClick={() => {\n            setActiveSection('cast');\n            scrollToSection('cast');\n          }}\n        >\n          Cast\n        </button>\n        <button\n          className={styles.link}\n          onClick={() => {\n            setActiveSection('reviews');\n            scrollToSection('reviews');\n          }}\n        >\n          Reviews\n        </button>\n      </div>\n\n      <div ref={castRef}>\n        {activeSection === 'cast' && <Cast movieId={movieId} />}\n      </div>\n      <div ref={reviewsRef}>\n        {activeSection === 'reviews' && <Reviews movieId={movieId} />}\n      </div>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","// extracted by mini-css-extract-plugin\nexport default {\"reviewsContainer\":\"Reviews_reviewsContainer__S2d5o\",\"reviewItem\":\"Reviews_reviewItem__beLBz\",\"error\":\"Reviews_error__VdPe2\"};","import React, { useEffect, useState } from 'react';\nimport { getMovieReviews } from 'services/movieService';\nimport Loader from 'components/Loader/Loader';\nimport styles from './Reviews.module.css';\n\nconst Reviews = ({ movieId }) => {\n  const [reviews, setReviews] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        const data = await getMovieReviews(movieId);\n        setReviews(data.results);\n      } catch (err) {\n        setError('Failed to fetch reviews. Please try again later.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    if (movieId) {\n      fetchReviews();\n    }\n  }, [movieId]);\n\n  return (\n    <div className={styles.reviewsContainer}>\n      {loading && <Loader />}\n      {error && <p className={styles.error}>{error}</p>}\n      <h2>Reviews</h2>\n      {reviews.length > 0 ? (\n        reviews.map(review => (\n          <div key={review.id} className={styles.reviewItem}>\n            <h3>{review.author}</h3>\n            <p>{review.content}</p>\n          </div>\n        ))\n      ) : (\n        <p>No reviews available for this movie.</p>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\nimport { Notify } from 'notiflix';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'b4a37daab61b0e2cbc84b0608fc0fe04';\n\nconst parameters = {\n  position: 'center-center',\n  timeout: 4000,\n  width: '750px',\n  fontSize: '30px',\n};\n\nexport async function getPopularFilms(page = 1) {\n  try {\n    const response = await axios.get(`${BASE_URL}/trending/movie/day`, {\n      params: { api_key: API_KEY, page: page || 1 },\n    });\n    return response.data;\n  } catch (error) {\n    onError(error);\n  }\n}\n\nexport async function getMovieInfo(id) {\n  const response = await axios.get(`${BASE_URL}/movie/${id}`, {\n    params: { api_key: API_KEY },\n  });\n  return response.data;\n}\n\nexport async function getMovieCast(id) {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${id}/credits?`, {\n      params: { api_key: API_KEY },\n    });\n    return response.data;\n  } catch (error) {\n    onError(error);\n  }\n}\n\nexport async function getMovieReviews(id) {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${id}/reviews?`, {\n      params: { api_key: API_KEY },\n    });\n    return response.data;\n  } catch (error) {\n    onError(error);\n  }\n}\n\n// export async function getMovieByKeyword(keyword, page = 1) {\n//   const response = await axios.get(\n//     `${BASE_URL}/search/movie?include_adult=false?language=en-US&page=1`,\n//     {\n//       params: { api_key: API_KEY, query: keyword, page: page },\n//     }\n//   );\n//   return response.data;\n// }\n\nexport async function getMovieByKeyword(keyword, page = 1) {\n  const response = await axios.get(`${BASE_URL}/search/movie`, {\n    params: {\n      api_key: API_KEY,\n      query: keyword,\n      page: page,\n      language: 'en-US',\n      include_adult: false,\n    },\n  });\n  return response.data;\n}\n\nexport async function getMoviesByGenres() {\n  try {\n    const response = await axios.get(`${BASE_URL}/genre/movie/list`, {\n      params: { api_key: API_KEY, language: 'en' },\n    });\n    return response.data;\n  } catch (error) {\n    onError(error.message);\n  }\n}\n\nexport async function getMovieTrailer(id) {\n  const response = await axios.get(`${BASE_URL}/movie/${id}/videos`, {\n    params: { api_key: API_KEY },\n  });\n  return response.data;\n}\n\nexport function onError(error) {\n  console.error('An error occurred:', error);\n  Notify.failure(\n    'Oops! Something went wrong! Try reloading the page or make another choice!',\n    parameters\n  );\n}\n"],"names":["_ref","movieId","_useState","useState","_useState2","_slicedToArray","cast","setCast","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","useEffect","fetchCast","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","getMovieCast","sent","Array","isArray","Error","t0","console","finish","stop","apply","arguments","_jsxs","className","styles","children","_jsx","Loader","length","map","actor","src","concat","profile_path","alt","name","character","cast_id","useParams","location","useLocation","movie","setMovie","_useState7","_useState8","activeSection","setActiveSection","castRef","useRef","reviewsRef","fetchMovieDetails","getMovieInfo","path","pathname","split","includes","scrollToSection","section","current","scrollIntoView","behavior","title","poster_path","overview","onClick","ref","Cast","Reviews","reviews","setReviews","fetchReviews","getMovieReviews","results","review","author","content","id","BASE_URL","API_KEY","parameters","position","timeout","width","fontSize","getPopularFilms","_getPopularFilms","page","response","_args","undefined","axios","params","api_key","abrupt","onError","_x","_getMovieInfo","_callee2","_context2","_x2","_getMovieCast","_callee3","_context3","_x3","_getMovieReviews","_callee4","_context4","getMovieByKeyword","_x4","_getMovieByKeyword","_callee5","keyword","_args5","_context5","query","language","include_adult","Notify"],"sourceRoot":""}